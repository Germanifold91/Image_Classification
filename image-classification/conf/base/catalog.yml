# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://kedro.readthedocs.io/en/stable/data/data_catalog.html

images_metadata@pd:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/images_metadata.csv
  save_args:
    sep: ','

X_train:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/x_train.csv
  save_args:
    sep: ','

y_train:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/y_train.csv
  save_args:
    sep: ','

X_test:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/x_test.csv
  save_args:
    sep: ','

y_test:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/y_test.csv
  save_args:
    sep: ','

# ------------------------------------------------------------------Trained Models-----------------------------------------------------------------------
tf_model:
  type: tensorflow.TensorFlowModelDataset
  filepath: data/06_models/tf_model

# ---------------------------------------------------------------Evolution of metrics--------------------------------------------------------------------
train_acc:
    type: kedro_mlflow.io.metrics.MlflowMetricHistoryDataset
    key: training_accuracy 

train_loss:
    type: kedro_mlflow.io.metrics.MlflowMetricHistoryDataset
    key: training_loss

val_acc:
    type: kedro_mlflow.io.metrics.MlflowMetricHistoryDataset
    key: validation_accuracy 

val_loss:
    type: kedro_mlflow.io.metrics.MlflowMetricHistoryDataset
    key: validation_loss 

# ----------------------------------------------------------------------Artifacts-------------------------------------------------------------------------
training_evaluation_metrics:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/07_model_output/training_metrics/acc_loss_evolution.png

cm_plot:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/07_model_output/cm/confusion_matrix.png

roc_plot:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/07_model_output/roc/roc_plot.png

# ---------------------------------------------------------------------Model Predictions-----------------------------------------------------------------
model_predictions:
  type: pandas.CSVDataset
  filepath: "data/07_model_output/model_prediction.csv"
  save_args:
    sep: ','
